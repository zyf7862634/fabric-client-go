// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chaincode_wrapper.proto

package message // import "github.com/commis/fabric-client-go/grpc/message"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ChaincodeRequest_Method int32

const (
	ChaincodeRequest_QUERY  ChaincodeRequest_Method = 0
	ChaincodeRequest_INVOKE ChaincodeRequest_Method = 1
)

var ChaincodeRequest_Method_name = map[int32]string{
	0: "QUERY",
	1: "INVOKE",
}
var ChaincodeRequest_Method_value = map[string]int32{
	"QUERY":  0,
	"INVOKE": 1,
}

func (x ChaincodeRequest_Method) String() string {
	return proto.EnumName(ChaincodeRequest_Method_name, int32(x))
}
func (ChaincodeRequest_Method) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_chaincode_wrapper_7f07ff9d3fa631a8, []int{0, 0}
}

type ChaincodeRequest struct {
	Chaincode            string                  `protobuf:"bytes,1,opt,name=chaincode,proto3" json:"chaincode,omitempty"`
	Method               ChaincodeRequest_Method `protobuf:"varint,2,opt,name=method,proto3,enum=message.ChaincodeRequest_Method" json:"method,omitempty"`
	Operator             string                  `protobuf:"bytes,3,opt,name=operator,proto3" json:"operator,omitempty"`
	Args                 string                  `protobuf:"bytes,4,opt,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ChaincodeRequest) Reset()         { *m = ChaincodeRequest{} }
func (m *ChaincodeRequest) String() string { return proto.CompactTextString(m) }
func (*ChaincodeRequest) ProtoMessage()    {}
func (*ChaincodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaincode_wrapper_7f07ff9d3fa631a8, []int{0}
}
func (m *ChaincodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChaincodeRequest.Unmarshal(m, b)
}
func (m *ChaincodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChaincodeRequest.Marshal(b, m, deterministic)
}
func (dst *ChaincodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChaincodeRequest.Merge(dst, src)
}
func (m *ChaincodeRequest) XXX_Size() int {
	return xxx_messageInfo_ChaincodeRequest.Size(m)
}
func (m *ChaincodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChaincodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChaincodeRequest proto.InternalMessageInfo

func (m *ChaincodeRequest) GetChaincode() string {
	if m != nil {
		return m.Chaincode
	}
	return ""
}

func (m *ChaincodeRequest) GetMethod() ChaincodeRequest_Method {
	if m != nil {
		return m.Method
	}
	return ChaincodeRequest_QUERY
}

func (m *ChaincodeRequest) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *ChaincodeRequest) GetArgs() string {
	if m != nil {
		return m.Args
	}
	return ""
}

type ResultResponse struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResultResponse) Reset()         { *m = ResultResponse{} }
func (m *ResultResponse) String() string { return proto.CompactTextString(m) }
func (*ResultResponse) ProtoMessage()    {}
func (*ResultResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_chaincode_wrapper_7f07ff9d3fa631a8, []int{1}
}
func (m *ResultResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultResponse.Unmarshal(m, b)
}
func (m *ResultResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultResponse.Marshal(b, m, deterministic)
}
func (dst *ResultResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultResponse.Merge(dst, src)
}
func (m *ResultResponse) XXX_Size() int {
	return xxx_messageInfo_ResultResponse.Size(m)
}
func (m *ResultResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResultResponse proto.InternalMessageInfo

func (m *ResultResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ResultResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *ResultResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*ChaincodeRequest)(nil), "message.ChaincodeRequest")
	proto.RegisterType((*ResultResponse)(nil), "message.ResultResponse")
	proto.RegisterEnum("message.ChaincodeRequest_Method", ChaincodeRequest_Method_name, ChaincodeRequest_Method_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChaincodeServiceClient is the client API for ChaincodeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChaincodeServiceClient interface {
	Send(ctx context.Context, in *ChaincodeRequest, opts ...grpc.CallOption) (*ResultResponse, error)
}

type chaincodeServiceClient struct {
	cc *grpc.ClientConn
}

func NewChaincodeServiceClient(cc *grpc.ClientConn) ChaincodeServiceClient {
	return &chaincodeServiceClient{cc}
}

func (c *chaincodeServiceClient) Send(ctx context.Context, in *ChaincodeRequest, opts ...grpc.CallOption) (*ResultResponse, error) {
	out := new(ResultResponse)
	err := c.cc.Invoke(ctx, "/message.ChaincodeService/send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChaincodeServiceServer is the server API for ChaincodeService service.
type ChaincodeServiceServer interface {
	Send(context.Context, *ChaincodeRequest) (*ResultResponse, error)
}

func RegisterChaincodeServiceServer(s *grpc.Server, srv ChaincodeServiceServer) {
	s.RegisterService(&_ChaincodeService_serviceDesc, srv)
}

func _ChaincodeService_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChaincodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChaincodeServiceServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.ChaincodeService/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChaincodeServiceServer).Send(ctx, req.(*ChaincodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChaincodeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "message.ChaincodeService",
	HandlerType: (*ChaincodeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "send",
			Handler:    _ChaincodeService_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chaincode_wrapper.proto",
}

func init() {
	proto.RegisterFile("chaincode_wrapper.proto", fileDescriptor_chaincode_wrapper_7f07ff9d3fa631a8)
}

var fileDescriptor_chaincode_wrapper_7f07ff9d3fa631a8 = []byte{
	// 319 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x4d, 0x4b, 0xfb, 0x40,
	0x10, 0xc6, 0x9b, 0xff, 0xbf, 0x8d, 0x66, 0x90, 0x52, 0x16, 0xa4, 0xb1, 0x08, 0x96, 0x9c, 0x7a,
	0x69, 0x02, 0xf5, 0xe2, 0xc1, 0x53, 0xa5, 0x07, 0x11, 0xb5, 0xae, 0xf8, 0x7a, 0x29, 0xdb, 0xcd,
	0x98, 0xae, 0x34, 0xd9, 0x75, 0x77, 0x5b, 0x3f, 0x9c, 0x5f, 0x4e, 0xba, 0x4d, 0xe2, 0x0b, 0x78,
	0x9b, 0x9d, 0x79, 0xe6, 0xc7, 0xb3, 0xf3, 0x40, 0x97, 0x2f, 0x98, 0x28, 0xb8, 0x4c, 0x71, 0xf6,
	0xae, 0x99, 0x52, 0xa8, 0x63, 0xa5, 0xa5, 0x95, 0x64, 0x27, 0x47, 0x63, 0x58, 0x86, 0xd1, 0x87,
	0x07, 0x9d, 0xb3, 0x4a, 0x44, 0xf1, 0x6d, 0x85, 0xc6, 0x92, 0x43, 0x08, 0xea, 0xc5, 0xd0, 0xeb,
	0x7b, 0x83, 0x80, 0x7e, 0x35, 0xc8, 0x09, 0xf8, 0x39, 0xda, 0x85, 0x4c, 0xc3, 0x7f, 0x7d, 0x6f,
	0xd0, 0x1e, 0xf5, 0xe3, 0x12, 0x16, 0xff, 0x06, 0xc5, 0x97, 0x4e, 0x47, 0x4b, 0x3d, 0xe9, 0xc1,
	0xae, 0x54, 0xa8, 0x99, 0x95, 0x3a, 0xfc, 0xef, 0xb0, 0xf5, 0x9b, 0x10, 0x68, 0x32, 0x9d, 0x99,
	0xb0, 0xe9, 0xfa, 0xae, 0x8e, 0x8e, 0xc0, 0xdf, 0x12, 0x48, 0x00, 0xad, 0x9b, 0xbb, 0x09, 0x7d,
	0xea, 0x34, 0x08, 0x80, 0x7f, 0x7e, 0x75, 0x7f, 0x7d, 0x31, 0xe9, 0x78, 0x11, 0x85, 0x36, 0x45,
	0xb3, 0x5a, 0x5a, 0x8a, 0x46, 0xc9, 0xc2, 0xe0, 0x06, 0x53, 0xbb, 0x6e, 0x51, 0x57, 0x6f, 0x7a,
	0x29, 0xb3, 0xcc, 0xd9, 0x0d, 0xa8, 0xab, 0x49, 0x08, 0xd5, 0x09, 0x4a, 0x27, 0xd5, 0x73, 0x34,
	0xfd, 0x76, 0x90, 0x5b, 0xd4, 0x6b, 0xc1, 0x91, 0x9c, 0x42, 0xd3, 0x60, 0x91, 0x92, 0x83, 0x3f,
	0xbf, 0xda, 0xeb, 0xd6, 0xa3, 0x9f, 0x8e, 0xa2, 0xc6, 0xf8, 0x11, 0xf6, 0xca, 0xd9, 0xec, 0x95,
	0xad, 0xd9, 0x78, 0xbf, 0x5e, 0x7e, 0xd8, 0x86, 0x32, 0xdd, 0x64, 0x32, 0xf5, 0x9e, 0x93, 0x4c,
	0xd8, 0xc5, 0x6a, 0x1e, 0x73, 0x99, 0x27, 0x5c, 0xe6, 0xb9, 0x30, 0xc9, 0x0b, 0x9b, 0x6b, 0xc1,
	0x87, 0x7c, 0x29, 0xb0, 0xb0, 0xc3, 0x4c, 0x26, 0x99, 0x56, 0x3c, 0x29, 0x71, 0x73, 0xdf, 0xa5,
	0x79, 0xfc, 0x19, 0x00, 0x00, 0xff, 0xff, 0xff, 0x98, 0xd4, 0xe2, 0xe8, 0x01, 0x00, 0x00,
}
